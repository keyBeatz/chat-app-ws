<?php

namespace ChatApp\WebSockets;

use ChatApp\WebSockets\Exceptions\ControllerRuntimeException;
use ChatApp\WebSockets\Exceptions\ClientNoResourceIdException;
use Ratchet\ConnectionInterface;
use React\EventLoop\LoopInterface;


/**
 * Class Client
 * @package AllStars\WebSockets
 */
class Client implements IClientConnection {

    /**
     * @var ConnectionInterface
     */
    private $connection;
    /**
     * @var resource id of connection (generated by ratchet server)
     */
    private $resourceId;
    /**
     * @var int id of user in allstars system
     */
    private $userId;

    /**
     * Client constructor.
     *
     * @param ConnectionInterface $connection
     * @param int $userId
     * @throws ClientNoResourceIdException
     */
    function __construct( ConnectionInterface $connection, int $userId = 0 ) {
        $this->connection = $connection;
        $this->resourceId = $connection->resourceId ?? null;
        $this->userId = $userId;

        if( $this->resourceId === null )
            throw new ClientNoResourceIdException( "No resource id was provided in connection. Can't create object." );
    }

    /**
     * @return ConnectionInterface
     */
    public function getConnection() : ConnectionInterface {
        return $this->connection;
    }

    /**
     * @return int
     */
    public function getResourceId() : int {
        return $this->resourceId;
    }

    /**
     * @return int
     */
    public function getUserId() : int {
        return $this->userId;
    }

    /**
     * @param string $message
     */
    final public function send( $message ) : void {
        $this->connection->send( $message );
    }

    final public function close() : void {
        $this->connection->close();
    }

    /**
     * @param int $userId
     */
    public function setUserId( int $userId ) : void {
        $this->userId = $userId;
    }

}

